<div id="data_mapping" class="pd-10 full-screen">
	<div class="easyui-layout" data-options="fit:true,border:true">
         <div data-options="region:'west',width:250,border:false">
			<label class="mg-bottom-5">数据向导</label>
			<ul id="data_mapping_guide"></ul>
         </div>
         <div data-options="region:'center',border:false" class="pd-left-10">
         	<label class="mg-bottom-5">映射表</label>
         	<div id="data_mapping_view" class="full-screen overflow-scroll"></div>
         </div>
     </div>
</div>
<script>
	(function(data_mapping){
		$.ajaxSetup({
			async:false
		});
		
		LazyLoad.css(['${baseUrl}/static/lib/connections/jquery.connections.css']);
		
		$.extend($.fn.tree.methods, {
				getLevel:function(jq,target){
				var l = $(target).parentsUntil("ul.tree","ul");
				return l.length+1;
			}
		});
		
		$("#data_mapping_guide").tree({
		    url:baseUrl+'/static/json/metadata.field.json',
		    lines:true
		});
		
		$('#data_mapping_guide .tree-node').each(function(i,e){
			if( $('#data_mapping_guide').tree("getLevel",e) == 2 ){
				domDraggable($(e));
			}
		});
		
		domDroppable($('#data_mapping_view'), '#data_mapping_guide .tree-node', function(e,source){
        	if($(source).hasClass('tree-node')){
        		drawTable(source, $(source).draggable('proxy').offset());
        	}
        });
		
		LazyLoad.js(['${baseUrl}/static/lib/connections/jquery.connections.js','${baseUrl}/static/lib/connections/jquery-timing.min.js'], function (){
			$('#data_mapping_view').on('click','.db-table i.fa-trash',function(){
				$(this).parent('table').remove();
			});
			
			$('#data_mapping_view').on('contextmenu','connection',function(e){
				e.preventDefault();
				var data = $.data(e.target,'connection');
				$.messager.confirm('注意','请确定要删除<br>从: '+data.node_from.parents('table').find('thead').text() + '-' + data.node_from.prev().text()+'<br>到: '+data.node_to.parents('table').find('thead').text() + '-'+data.node_to.prev().text()+'  的连接?',function(r){
				    if (r){
				    	$(e.target).connections('remove');
				    }
				});
			});
			
			$('#data_mapping_view').on('mouseenter','connection',function(){
				colorLink(this,'#55f');
			}).on('mouseleave','connection',function(){
				colorLink(this,'#808080');
			});
			$.repeat().add('connection').each($).connections('update').wait(0);
			
			$.post( baseUrl+'/static/json/metadata.mapping.table.view.json', {
		    	pagination:0
			}, function(data) {
				if(data){
					data = JSON.parse(data);
				}
				if(data.tables){
					for(var i in data.tables){
						drawTableFromJson(data.tables[i].id, data.tables[i].left, data.tables[i].top)
					}
				}
				if(data.mappings){
					for(var i in data.mappings){
						connectWith('#data_mapping_view_table_' + data.mappings[i].from +'~td', '#data_mapping_view_table_' + data.mappings[i].to +'~td', 'connection')
					}
				}
			});
		});
		
		function domDraggable(dom){
			dom.draggable({
	            revert: true,
	            proxy: function(source){
	        		return $('<div class="proxy"></div>').html($(source).html()).appendTo('body');
	            },
	            onStartDrag:function(){
	                $(this).draggable('options').cursor = 'not-allowed';
	            },
	            onStopDrag:function(){
	                $(this).draggable('options').cursor='move';
	            }
	        });
		}
		
		function domDroppable(dom, accept, onDropFunc){
			dom.droppable({
				accept: accept,
				onDragEnter:function(e,source){
					$(this).addClass('drop-over');
	                $(source).draggable('options').cursor='move';
	            },
	            onDragLeave:function(e,source){
	            	$(this).removeClass('drop-over');
	                $(source).draggable('options').cursor='not-allowed';
	            },
	            onDrop:function(e,source){
	            	$(this).removeClass('drop-over');
	            	if($.isFunction(onDropFunc)){
	            		onDropFunc(e,source);
	            	}
	            }
		    });
		}
		function connectWith(from, to, cls){
			$('#data_mapping_view').connections({
				from: from,
				to: to,
				within:'#data_mapping_view',
				class: cls
			});
		}
		
		function colorLink(dom, color){
			var data = $.data(dom,'connection');
			$(dom).css('color',color);
			if(data){
				data.node_from.css('background-color',color);
				data.node_from.prev().css('color',color)
				data.node_to.css('background-color',color);
				data.node_to.prev().css('color',color)
			}
		}
		function drawTableFromJson(id, x, y){
			var node = $('#data_mapping_guide').tree('find', id);
			var position = {};
			position.top = x+170;
			position.left = y+460;
			drawTable(node.target, position);
		}
		
		function drawTable(source, position){
			var cnodes = $('#data_mapping_guide').tree('getChildren', source);
			if(cnodes.length > 0){
				var fnode = $('#data_mapping_guide').tree('getNode', source);
				if($('#data_mapping_view_table_'+fnode.id).length > 0){
					$.messager.alert('提示', '该数据表已经存在！');
					return;
				}
				var table = $('<table id="data_mapping_view_table_'+fnode.id+'" class="db-table"></table>');
				table.append('<thead><tr><td colspan="2">'+fnode.text+'</td></tr></thead>');
				table.append('<tbody></tbody>');
				for(var i in cnodes){
					table.find('tbody').append('<tr><td id="data_mapping_view_table_'+fnode.id+'_'+cnodes[i].id+'">'+cnodes[i].text+'</td><td class="td-link"></td></tr>');
				}
				table.append('<i class="fa fa-trash"></i>');
				table.append('<i class="fa fa-arrows"></i>');
				$('#data_mapping_view').append(table);
				$('#data_mapping_view_table_'+fnode.id).draggable({
				    handle:$('#data_mapping_view_table_'+fnode.id+' i.fa-arrows'),
				    onDrag:function(e){
						var d = e.data;
						$('#data_mapping_view_table_'+fnode.id).attr('data-left',d.left).attr('data-top',d.top);
			            if (d.left < 10){d.left = 16}
			            if (d.top < 10){d.top = 16}
				    }
				});
				$('#data_mapping_view_table_'+fnode.id).css('position','absolute').css('left',position.left-460).css('top',position.top-170);
				table.find('tbody td').each(function(i, e){
					domDraggable($(e));
					domDroppable($(e), '.db-table td', function(e,source){
						if($(source)[0].tagName == 'TD'){
							if($(source).attr('id').split('_',5).sort().toString() == $(e.target).attr('id').split('_',5).sort().toString()){
								$.messager.alert('提示', '同一数据表自身不能映射！');
								return;
							}
							connectWith('#'+$(source).attr('id')+'~td', '#'+$(e.target).attr('id')+'~td', 'connection')
			        	}
			        });
				});
			 }
		}
		
		function addRow(){
			endEdit();
			$("#data_mapping_table").datagrid('appendRow',{});
	    }
		
		function delRow(){
			endEdit();
			var checkedRows = $("#data_mapping_table").datagrid('getChecked');
			if(checkedRows.length  < 1){
				$.messager.alert('提示', '请选择一项或多项进行删除操作！');
				return;
			}
			var ids=[],names=[];
			$.each(checkedRows,function(idx,ele){
				ids.push(ele.mtd_id);
				names.push(ele.mtd_name);
			});
			$.messager.confirm('注意','请确定要删除以下数据：<br>'+ names,function(r){
			    if (r){
			    	$.post(baseUrl+"/metadata/datasource/delete", {
						'ids': ids.join()
					}, function(data) {
						if (data && data.msgType == 'success'){
							refreshTable();
						}else{
							$.messager.alert('错误', '未知错误！', 'error');
						}
					});
			    }
			});
		}
		
		function endEdit() {
			var editCell = $("#data_mapping_table").datagrid('cell');
			if (editCell) {
				$("#data_mapping_table").datagrid('endEdit', editCell.index);
			}
		}

		function refreshTable() {
			$("#data_mapping_table").datagrid('reload');
		}
		
	})('#data_mapping');
</script>